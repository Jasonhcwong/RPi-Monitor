########################################################################
# Extract Monerod information
#  Page: 2
#  Information               Status     Statistics
#  - distribution name       - yes      - no
#  - kernel version          - yes      - no
#  - firmware version        - yes      - no
#  - processor model         - yes      - no
#  - num of pkg upgradable   - yes      - no
#  - list of pkg upgradable  - yes      - no
########################################################################

dynamic.101.name=network,blockCount,chainTip,peersIn,peersOut,difficulty,target,version,startTime,hfInfo,hfVersion
dynamic.101.source=/usr/src/app/get_info.sh
dynamic.101.regexp="(\S+)",(\d+),(\d+),(\d+),(\d+),(\d+),(\d+),"(.*)",(.*),(\d+),(\d+),
dynamic.101.postprocess=
dynamic.101.interval=2

#dynamic.102.name=miningEnabled,bgMiningEnabled,miningAddress,miningSpeed,miningThreads
#dynamic.102.source=/usr/src/app/mining_status.sh
#dynamic.102.regexp=(\S+),(\S+),("\S*"),(\d+),(\d+),
#dynamic.102.postprocess=
#dynamic.102.interval=2


#service status
dynamic.103.name=monerodActive
dynamic.103.source=docker-compose -f /settings/monerod.yml ps | wc -l
dynamic.103.regexp=(.*)

#tor enabled?
dynamic.104.name=monerodTor
dynamic.104.source=jq '.monero.tor' /settings/service.json
dynamic.104.regexp=(.*)

#target_height from "sync_info"
#dynamic.105.name=monerodTargetHeight
#dynamic.105.source=/usr/src/app/sync_info.sh
#dynamic.105.regexp=(.*)
#dynamic.105.interval=18

#this is a hack, to start manager service every hour
dynamic.114.name=startManager
dynamic.114.source=docker-compose -f /settings/manager.yml up -d
dynamic.114.regexp=(.*)
dynamic.114.interval=360

#this is another hack, to check if moenrod is getting stucked
dynamic.115.name=checkStuck
dynamic.115.source=/usr/src/app/check_monerod_stuck.sh
dynamic.115.regexp=(.*)
dynamic.115.interval=120

web.status.1.content.1.name=Monerod
web.status.1.content.1.icon=monero.png
web.status.1.content.1.line.1='Version: ' + Badge(1, "==1", data.version, "primary")
web.status.1.content.1.line.2='Daemon Status: <b>' + Badge(data.monerodActive, "!='2'", "Running", "success") + Badge(data.monerodActive, "=='2'", "Stopped", "danger") +'</b>'
web.status.1.content.1.line.3='Tor Enabled: <b>' + Badge(data.monerodTor, "!='true'", "False", "success") + Badge(data.monerodTor, "=='true'", "True", "success") +'</b>'

web.status.1.content.2.name=Blockchain
web.status.1.content.2.icon=blockchain.png
web.status.1.content.2.line.1='Network: ' + Badge(data.network, "=='mainnet'", "mainnet", "success") + Badge(data.network , "=='testnet'", "testnet", "warning") + Badge(data.network , "=='stagnet'", "stagnet", "warning")
web.status.1.content.2.line.2='Current Block Count: <b>' + data.blockCount + '</b>'
web.status.1.content.2.line.3=ProgressBar(data.blockCount / data.chainTip * 100, 100)
web.status.1.content.2.line.4='Hard Fork state: ' + Badge(data.hfInfo, "== 2", "Everything looks good", "success") + Badge(data.hfInfo, "== 1", "An update is needed to fork properly", "warning") + Badge(data.hfInfo, "== 0", "There is likely a hard fork", "warning")
web.status.1.content.2.line.5='Hard Fork Version : <b>' + data.hfVersion + '</b>'

web.status.1.content.3.name=P2P Network
web.status.1.content.3.icon=network.png
web.status.1.content.3.line.1='Peers Out: <b>' + data.peersOut + '</b>'
web.status.1.content.3.line.2='Peers In: <b>' + data.peersIn + '</b>'

